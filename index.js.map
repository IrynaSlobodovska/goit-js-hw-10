{"version":3,"file":"index.js","sources":["../src/js/1-timer.js","../src/js/2-snackbar.js"],"sourcesContent":["import flatpickr from 'https://cdn.jsdelivr.net/npm/flatpickr/dist/esm/index.js';\nimport 'https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js';\nimport 'https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\n\nflatpickr(dateInput, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const currentTime = new Date();\n    const timeDiff = userSelectedDate - currentTime;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      dateInput.disabled = false;\n      iziToast.success({\n        title: 'Done',\n        message: 'The countdown has ended!',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    const time = convertMs(timeDiff);\n    updateTimerDisplay(time);\n  }, 1000);\n});\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delay = Number(form.elements.delay.value);\n  const state = form.elements.state.value;\n\n  createPromise({ delay, state })\n    .then(delay => {\n      iziToast.success({\n        title: '✅ Success',\n        message: `Fulfilled promise in ${delay}ms`,\n        position: 'topRight',\n      });\n    })\n    .catch(delay => {\n      iziToast.error({\n        title: '❌ Error',\n        message: `Rejected promise in ${delay}ms`,\n        position: 'topRight',\n      });\n    });\n\n  form.reset(); // очищаємо форму після сабміту\n});\n\nfunction createPromise({ delay, state }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n}\n"],"names":["startBtn","dateInput","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","timeDiff","updateTimerDisplay","time","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms","form","event","delay","state","createPromise","resolve","reject"],"mappings":"6jCAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EAErDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBM,EAAmBI,EAEvB,CACF,EAEAE,EAAUX,EAAWO,CAAO,EAE5BR,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBM,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAWP,EADG,IAAI,KAGxB,GAAIO,GAAY,EAAG,CACjB,cAAcN,CAAO,EACrBO,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EAChEb,EAAU,SAAW,GACrBU,EAAS,QAAQ,CACf,MAAO,OACP,QAAS,2BACT,SAAU,UAClB,CAAO,EACD,MACF,CAEA,MAAMI,EAAOC,EAAUH,CAAQ,EAC/BC,EAAmBC,CAAI,CACzB,EAAG,GAAI,CACT,CAAC,EAED,SAASD,EAAmB,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DlB,EAAO,YAAcmB,EAAeJ,CAAI,EACxCd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,CAChD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CCtFA,MAAMI,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAQ,OAAOF,EAAK,SAAS,MAAM,KAAK,EACxCG,EAAQH,EAAK,SAAS,MAAM,MAElCI,EAAc,CAAE,MAAAF,EAAO,MAAAC,CAAK,CAAE,EAC3B,KAAKD,GAAS,CACbf,EAAS,QAAQ,CACf,MAAO,YACP,QAAS,wBAAwBe,CAAK,KACtC,SAAU,UAClB,CAAO,CACH,CAAC,EACA,MAAMA,GAAS,CACdf,EAAS,MAAM,CACb,MAAO,UACP,QAAS,uBAAuBe,CAAK,KACrC,SAAU,UAClB,CAAO,CACH,CAAC,EAEHF,EAAK,MAAK,CACZ,CAAC,EAED,SAASI,EAAc,CAAE,MAAAF,EAAO,MAAAC,GAAS,CACvC,OAAO,IAAI,QAAQ,CAACE,EAASC,IAAW,CACtC,WAAW,IAAM,CACXH,IAAU,YACZE,EAAQH,CAAK,EAEbI,EAAOJ,CAAK,CAEhB,EAAGA,CAAK,CACV,CAAC,CACH"}